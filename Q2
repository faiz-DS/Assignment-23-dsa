class Node:
    def __init__(self, key):
        self.data = key
        self.left = None
        self.right = None


def left_view(root):
    if root is None:
        return

    queue = [(root, 1)]
    current_level = 0
    leftmost_nodes = []

    while queue:
        node, level = queue.pop(0)

        if level > current_level:
            leftmost_nodes.append(node.data)
            current_level = level

        if node.left:
            queue.append((node.left, level + 1))

        if node.right:
            queue.append((node.right, level + 1))

    return leftmost_nodes


# Test cases
if __name__ == "__main__":
    # Example 1
    root1 = Node(4)
    root1.left = Node(5)
    root1.right = Node(2)
    root1.right.left = Node(3)
    root1.right.right = Node(1)
    root1.right.left.left = Node(6)
    root1.right.left.right = Node(7)

    print("Output for Example 1:", left_view(root1))  # Output: [4, 5, 3, 6]

    # Example 2
    root2 = Node(1)
    root2.left = Node(2)
    root2.right = Node(3)
    root2.left.right = Node(4)
    root2.left.right.right = Node(5)
    root2.left.right.right.right = Node(6)

    print("Output for Example 2:", left_view(root2))  # Output: [1, 2, 4, 5, 6]
